/* You can add global styles to this file, and also import other style files */
@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Agdasima:wght@400;700&family=Oswald:wght@200..700&display=swap');
@import 'variables';
@import 'mediaQueries';


*{
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: agdasima,sans-serif;
  font-size: $mobile-body-text-size;
  @include mediaMinWidth(1024px) {
      font-size: $desktop-body-text-size;
    }
}


h1,h2,h3,h4{
  font-family: Oswald,sans-serif;
}

h1{
  font-size: $mobile-h1-text-size;
  @include mediaMinWidth(1024px) {
     font-size: $desktop-h1-text-size;
    }
}

h2 {
  font-size: $mobile-h2-text-size;
  @include mediaMinWidth(1024px) {
      font-size: $desktop-h2-text-size;
    }
}

h3 {
  font-size: $mobile-h3-text-size;
  @include mediaMinWidth(1024px) {
      font-size: $desktop-h3-text-size;
    }
}

body{
  background-color: $primary-background;
  width: 100vw;
  max-width: 100%;
  height: 100vh;
  max-height: 100%;
}

#cornerWhiteDiv {
  background-color: $primary-background;
  height: 130px;
  width: 130px;
  border-radius: 50%;
  position: absolute;
  left: -55px;
  top: -55px;

  @include mediaMinWidth($width-cameraListPage-breakpoint2) {
    display: none;
  }
}

#mainContainer{
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 100%;
}

#OperationResultInf {
  position: absolute;
  z-index: 100;
  width: min(90vw, 700px);
  margin-inline: auto;
  top: 24px;
  left: calc((100vw - min(95vw, 700px)) / 2)
}


// Custom checkbox input style
.checkbox-wrapper-5 .check {
  --size: 40px;

  position: relative;
  background: linear-gradient(90deg, #f19af3, #f099b5);
  line-height: 0;
  perspective: 400px;
  font-size: var(--size);
}

.checkbox-wrapper-5 .check input[type="checkbox"],
.checkbox-wrapper-5 .check label,
.checkbox-wrapper-5 .check label::before,
.checkbox-wrapper-5 .check label::after,
.checkbox-wrapper-5 .check {
  appearance: none;
  display: inline-block;
  border-radius: var(--size);
  border: 0;
  transition: .35s ease-in-out;
  box-sizing: border-box;
  cursor: pointer;
}

.checkbox-wrapper-5 .check label {
  width: calc(2.2 * var(--size));
  height: var(--size);
  background: #d7d7d7;
  overflow: hidden;
}

.checkbox-wrapper-5 .check input[type="checkbox"] {
  position: absolute;
  z-index: 1;
  width: calc(.8 * var(--size));
  height: calc(.8 * var(--size));
  top: calc(.1 * var(--size));
  left: calc(.1 * var(--size));
  background: linear-gradient(90deg, #8cb3ff, #80d0ff);
  box-shadow: 0 6px 7px rgba(0, 0, 0, 0.3);
  outline: none;
  margin: 0;
}

.checkbox-wrapper-5 .check input[type="checkbox"]:checked {
  left: calc(1.3 * var(--size));
}

.checkbox-wrapper-5 .check input[type="checkbox"]:checked+label {
  background: transparent;
}

.checkbox-wrapper-5 .check label::before,
.checkbox-wrapper-5 .check label::after {
  content: "· ·";
  position: absolute;
  overflow: hidden;
  left: calc(.15 * var(--size));
  top: calc(.5 * var(--size));
  height: var(--size);
  letter-spacing: calc(-0.04 * var(--size));
  color: white;
  font-family: "Times New Roman", serif;
  z-index: 2;
  font-size: calc(.6 * var(--size));
  border-radius: 0;
  transform-origin: 0 0 calc(-0.5 * var(--size));
  backface-visibility: hidden;
}

.checkbox-wrapper-5 .check label::after {
  content: "●";
  top: calc(.65 * var(--size));
  left: calc(.2 * var(--size));
  height: calc(.1 * var(--size));
  width: calc(.35 * var(--size));
  font-size: calc(.2 * var(--size));
  transform-origin: 0 0 calc(-0.4 * var(--size));
}

.checkbox-wrapper-5 .check input[type="checkbox"]:checked+label::before,
.checkbox-wrapper-5 .check input[type="checkbox"]:checked+label::after {
  left: calc(1.55 * var(--size));
  top: calc(.4 * var(--size));
  line-height: calc(.1 * var(--size));
  transform: rotateY(360deg);
}

.checkbox-wrapper-5 .check input[type="checkbox"]:checked+label::after {
  height: calc(.16 * var(--size));
  top: calc(.55 * var(--size));
  left: calc(1.6 * var(--size));
  font-size: calc(.6 * var(--size));
  line-height: 0;
}

// Custom button-33 style 

.button-33 {
  background-color: white;
  /* Lightened to be closer to white */
  border-radius: 100px;
  box-shadow: rgba(255, 255, 255, 0.2) 0 -25px 18px -14px inset,
    rgba(255, 255, 255, 0.15) 0 1px 2px,
    rgba(255, 255, 255, 0.15) 0 2px 4px,
    rgba(255, 255, 255, 0.15) 0 4px 8px,
    rgba(255, 255, 255, 0.15) 0 8px 16px,
    rgba(255, 187, 255, 0.15) 0 16px 32px;
  color: $secondary-background;
  cursor: pointer;
  display: inline-block;
  font-family: CerebriSans-Regular, -apple-system, system-ui, Roboto, sans-serif;
  padding: 7px 20px;
  text-align: center;
  text-decoration: none;
  transition: all 250ms;
  border: 0;
  font-size: 16px;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
}

.button-33:hover {
  box-shadow: rgba(240, 153, 181, 0.35) 0 -25px 18px -14px inset,
    rgba(240, 153, 181, 0.25) 0 1px 2px,
    rgba(240, 153, 181, 0.25) 0 2px 4px,
    rgba(240, 153, 181, 0.25) 0 4px 8px,
    rgba(240, 153, 181, 0.25) 0 8px 16px,
    rgba(240, 153, 181, 0.25) 0 16px 32px;
  transform: scale(1.05) rotate(-1deg);
}


/* Importing Bootstrap SCSS file. */
@import 'bootstrap/scss/bootstrap';
